--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v6=string.rep;local v241=table.concat;local v153=table.insert;local v259=math.ldexp;local v111=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v86=v2(v0(v30,16));if v19 then local v115=v6(v86,v19);v19=nil;return v115;else return v86;end end end);local function v20(v31,v32,v33) if v33 then local v87=0 -0 ;local v88;while true do if (v87==(0 -0)) then v88=(v31/((3 -1)^(v32-(2 -1))))%((1 + 1)^(((v33-(1 + 0)) -(v32-((958 -(892 + 65)) -0))) + (620 -(555 + (152 -88))))) ;return v88-(v88%(932 -(857 + 74))) ;end end else local v89=(8 -6)^(v32-(569 -(367 + 201))) ;return (((v31%(v89 + v89))>=v89) and (928 -(214 + 713))) or ((0 -0) + 0) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (3 -1) );v18=v18 + (352 -(87 + 263)) ;return (v36 * (436 -(67 + 113))) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + 3 + 0 );v18=v18 + (9 -5) ;return (v40 * (12338840 + 4438376)) + (v39 * 65536) + (v38 * (1017 -761)) + v37 ;end local function v24() local v41=952 -((3145 -2343) + 150) ;local v42;local v43;local v44;local v45;local v46;local v47;while true do if (v41==(1489 -(998 + 488))) then if (v46==(0 -0)) then if (v45==(0 -0)) then return v47 * (0 + 0) ;else local v124=0 + 0 + 0 ;while true do if (v124==((2052 -(87 + 968)) -(915 + 82))) then v46=4 -(13 -10) ;v44=0 -0 ;break;end end end elseif (v46==(1083 + 110 + 854)) then return ((v45==(0 -0)) and (v47 * ((1188 -(1069 + 118))/(0 -(0 -0))))) or (v47 * NaN) ;end return v259(v47,v46-(56 + 967) ) * (v44 + (v45/((3 -1)^(10 + 42)))) ;end if (v41==(885 -(261 + (2037 -(447 + 966))))) then v42=v23();v43=v23();v41=(2 -1) -0 ;end if (v41==((1819 -(1703 + 114)) + 0)) then v46=v20(v43,812 -(368 + (1124 -(376 + 325))) ,97 -66 );v47=((v20(v43,50 -(10 + 8) )==1) and  -(4 -3)) or (3 -2) ;v41=(14 -5) -(18 -12) ;end if (v41==(443 -(416 + 26))) then v44=3 -2 ;v45=(v20(v43,1 + 0 ,1933 -(1789 + 124) ) * ((3 -1)^(470 -(145 + 293)))) + v42 ;v41=432 -(44 + 386) ;end end end local function v25(v48) local v49;if  not v48 then v48=v23();if (v48==(0 + 0)) then return "";end end v49=v3(v16,v18,(v18 + v48) -(2 -1) );v18=v18 + v48 ;local v50={};for v67=1, #v49 do v50[v67]=v2(v1(v3(v49,v67,v67)));end return v241(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return function(v90,v91,v92,v93,v94,v95,v96,v97) local v90=(function() return 1690 -(209 + 1481) ;end)();local v91=(function() return;end)();local v93=(function() return;end)();while true do if (v90==(0 -0)) then local v120=(function() return 1636 -(1373 + 263) ;end)();while true do if (v120~=1) then else v90=(function() return  #".";end)();break;end if (v120~=0) then else v91=(function() return v92();end)();v93=(function() return nil;end)();v120=(function() return 1001 -(451 + 549) ;end)();end end end if (v90== #"/") then if (v91== #">") then v93=(function() return v92()~=0 ;end)();elseif (v91==(1 + 1)) then v93=(function() return v94();end)();elseif (v91~= #"nil") then else v93=(function() return v95();end)();end v96[v97]=(function() return v93;end)();break;end end return v90,v91,v92,v93,v94,v95,v96,v97;end;end)();local v52=(function() return function(v98,v99,v100,v101,v102,v103,v104,v105,v106) local v107=(function() return 0;end)();local v98=(function() return;end)();local v99=(function() return;end)();while true do if (v107~=1) then else local v122=(function() return 0;end)();while true do if (v122==0) then while true do if (v98~=0) then else v99=(function() return v100();end)();if (v101(v99, #".", #"!")==0) then local v162=(function() return 0 -0 ;end)();local v163=(function() return;end)();local v164=(function() return;end)();local v165=(function() return;end)();local v166=(function() return;end)();while true do if (v162==1) then local v256=(function() return 0 -0 ;end)();while true do if (v256~=(1385 -(746 + 638))) then else v162=(function() return 2;end)();break;end if (v256==0) then v165=(function() return nil;end)();v166=(function() return nil;end)();v256=(function() return 1;end)();end end end if (2==v162) then while true do if (v163~= #"/") then else local v286=(function() return 0 + 0 ;end)();local v287=(function() return;end)();while true do if (v286~=(0 -0)) then else v287=(function() return 0;end)();while true do if (v287~=1) then else v163=(function() return 343 -(218 + 123) ;end)();break;end if (v287==(1581 -(1535 + 46))) then v166=(function() return {v102(),v102(),nil,nil};end)();if (v164==0) then local v303=(function() return 0;end)();local v304=(function() return;end)();while true do if ((0 + 0)==v303) then v304=(function() return 560 -(306 + 254) ;end)();while true do if (v304~=0) then else v166[ #"-19"]=(function() return v102();end)();v166[ #".com"]=(function() return v102();end)();break;end end break;end end elseif (v164== #"[") then v166[ #"xnx"]=(function() return v103();end)();elseif (v164==(1 + 1)) then v166[ #"gha"]=(function() return v103() -(2^(30 -14)) ;end)();elseif (v164== #"gha") then local v311=(function() return 1467 -(899 + 568) ;end)();local v312=(function() return;end)();while true do if (v311==(0 + 0)) then v312=(function() return 0;end)();while true do if (v312~=0) then else v166[ #"xnx"]=(function() return v103() -((4 -2)^16) ;end)();v166[ #"0313"]=(function() return v102();end)();break;end end break;end end end v287=(function() return 1;end)();end end break;end end end if (v163== #"xxx") then if (v101(v165, #"gha", #"gha")== #":") then v166[ #"asd1"]=(function() return v104[v166[ #"http"]];end)();end v105[v106]=(function() return v166;end)();break;end if (v163==(605 -(268 + 335))) then local v289=(function() return 0;end)();local v290=(function() return;end)();while true do if (v289==0) then v290=(function() return 290 -(60 + 230) ;end)();while true do if (v290==1) then v163=(function() return  #"xxx";end)();break;end if (v290==0) then if (v101(v165, #"|", #"|")== #"\\") then v166[2]=(function() return v104[v166[2]];end)();end if (v101(v165,574 -(426 + 146) ,2)~= #"[") then else v166[ #"19("]=(function() return v104[v166[ #"-19"]];end)();end v290=(function() return 1 + 0 ;end)();end end break;end end end if (v163~=0) then else local v291=(function() return 0;end)();while true do if (v291~=0) then else v164=(function() return v101(v99,2, #"xnx");end)();v165=(function() return v101(v99, #"0313",1462 -(282 + 1174) );end)();v291=(function() return 812 -(569 + 242) ;end)();end if (v291==(2 -1)) then v163=(function() return  #"]";end)();break;end end end end break;end if (v162==(0 + 0)) then v163=(function() return 1024 -(706 + 318) ;end)();v164=(function() return nil;end)();v162=(function() return 1;end)();end end end break;end end return v98,v99,v100,v101,v102,v103,v104,v105,v106;end end end if (v107==(1251 -(721 + 530))) then v98=(function() return 1271 -(945 + 326) ;end)();v99=(function() return nil;end)();v107=(function() return 2 -1 ;end)();end end end;end)();local v53=(function() return function(v108,v109,v110) local v111=(function() return 0 + 0 ;end)();while true do if (v111==0) then local v123=(function() return 700 -(271 + 429) ;end)();while true do if (v123==(0 + 0)) then v108[v109-#"[" ]=(function() return v110();end)();return v108,v109,v110;end end end end end;end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {v54,v55,nil,v56};end)();local v58=(function() return v23();end)();local v59=(function() return {};end)();for v69= #"|",v58 do FlatIdent_25011,Type,v21,Cons,v24,v25,v59,v69=(function() return v51(FlatIdent_25011,Type,v21,Cons,v24,v25,v59,v69);end)();end v57[ #"gha"]=(function() return v21();end)();for v70= #"<",v23() do FlatIdent_1076E,Descriptor,v21,v20,v22,v23,v59,v54,v70=(function() return v52(FlatIdent_1076E,Descriptor,v21,v20,v22,v23,v59,v54,v70);end)();end for v71= #"/",v23() do v55,v71,v28=(function() return v53(v55,v71,v28);end)();end return v57;end local function v29(v61,v62,v63) local v64=v61[1501 -(1408 + (254 -162)) ];local v65=v61[(83 + 1005) -(461 + 625) ];local v66=v61[1291 -(993 + 295) ];return function(...) local v72=v64;local v73=v65;local v74=v66;local v75=v27;local v76=1 + (0 -0) ;local v77= -1;local v78={};local v79={...};local v80=v12("#",...) -(1172 -((1357 -(714 + 225)) + 753)) ;local v81={};local v82={};for v112=0,v80 do if ((4549==4549) and (v112>=v74)) then v78[v112-v74 ]=v79[v112 + 1 + 0 ];else v82[v112]=v79[v112 + (2 -1) ];end end local v83=(v80-v74) + 1 ;local v84;local v85;while true do v84=v72[v76];v85=v84[1 + 0 ];if (v85<=(28 -7)) then if (v85<=(3 + 7)) then if (v85<=4) then if ((v85<=(1 + 0)) or (3022>=3024)) then if (v85==0) then v82[v84[531 -(406 + 14 + 109) ]]=v84[1772 -(1749 + 20) ];else v82[v84[1 + 1 ]][v82[v84[3 -0 ]]]=v82[v84[1326 -(1249 + 73) ]];end elseif (v85<=(1 + 1)) then do return;end elseif ((v85>(1148 -(466 + 679))) or (4459<=1113)) then local v179=v73[v84[3]];local v180;local v181={};v180=v10({},{__index=function(v233,v234) local v235=v181[v234];return v235[1][v235[4 -2 ]];end,__newindex=function(v236,v237,v238) local v239=v181[v237];v239[2 -1 ][v239[1902 -(106 + 1794) ]]=v238;end});for v241=1 + (806 -(118 + 688)) ,v84[2 + 2 ] do local v242=(48 -(25 + 23)) -0 ;local v243;while true do if ((3632>3398) and (4820>2198) and (v242==1)) then if (v243[1]==35) then v181[v241-(2 -(1 + 0)) ]={v82,v243[3]};else v181[v241-(1428 -(41 + 1386)) ]={v62,v243[6 -3 ]};end v81[ #v81 + (2 -1) ]=v181;break;end if (0==v242) then v76=v76 + ((562 -395) -(122 + 44)) ;v243=v72[v76];v242=1 -0 ;end end end v82[v84[2]]=v29(v179,v180,v63);else local v183=v84[6 -4 ];local v184={};for v244=1 + 0 , #v81 do local v245=v81[v244];for v257=0, #v245 do local v258=0;local v259;local v260;local v261;while true do if (v258==0) then v259=v245[v257];v260=v259[1];v258=1 + 0 ;end if ((v258==(1 -0)) or (1061>=4891)) then v261=v259[2];if ((v260==v82) and (v261>=v183)) then v184[v261]=v260[v261];v259[1]=v184;end break;end end end end end elseif (v85<=((804 -(16 + 716)) -(30 + 35))) then if (v85<=(4 + 1)) then if (v82[v84[1259 -(1043 + (412 -198)) ]]==v84[15 -11 ]) then v76=v76 + (1213 -(323 + 889)) ;else v76=v84[7 -4 ];end elseif (v85==(586 -(361 + 219))) then v76=v84[323 -(53 + 267) ];else local v187=v84[(98 -(11 + 86)) + (2 -1) ];v82[v187]=v82[v187](v13(v82,v187 + (414 -(15 + 398)) ,v77));end elseif ((4082<=4917) and (v85<=(990 -((303 -(175 + 110)) + 964)))) then v82[v84[7 -5 ]]={};elseif (v85>(6 + 3)) then v82[v84[2 + 0 ]]=v82[v84[853 -(20 + 830) ]][v82[v84[4 + 0 ]]];else v82[v84[4 -2 ]]=v63[v84[129 -(116 + 10) ]];end elseif ((1364<=4473) and (v85<=(2 + 13))) then if (v85<=(750 -((2673 -2131) + (1992 -(503 + 1293))))) then if ((4832>=1386) and ((v85>(23 -12)) or (3595<=3))) then v82[v84[(2 -1) + 1 ]]=v63[v84[2 + 1 ]];else v82[v84[2]]=v84[2 + 1 ];end elseif (v85<=(33 -20)) then local v135=0 -0 ;local v136;local v137;while true do if (v135==(1552 -(1126 + 425))) then v82[v136 + (406 -(118 + 287)) ]=v137;v82[v136]=v137[v84[15 -11 ]];break;end if (v135==(1121 -(86 + 32 + 1003))) then v136=v84[(1066 -(810 + 251)) -3 ];v137=v82[v84[380 -(142 + 235) ]];v135=4 -3 ;end end elseif ((137==137) and (v85>(4 + 10))) then local v193=977 -(553 + 424) ;local v194;while true do if (v193==(0 -0)) then v194=v84[2 + 0 ];v82[v194](v13(v82,v194 + 1 + 0 ,v84[2 + 0 + 1 ]));break;end end else v82[v84[1 + 1 ]]=v82[v84[2 + 1 ]][v82[v84[8 -4 ]]];end elseif ((v85<=(49 -31)) or (4672==3852)) then if ((v85<=16) or (1570>=4332)) then v82[v84[1 + 1 ]][v84[6 -3 ]]=v82[v84[2 + 2 ]];elseif ((v85==(82 -65)) or (4064<=1819)) then local v197=v84[755 -(239 + 514) ];local v198=v82[v84[2 + 1 ]];v82[v197 + 1 ]=v198;v82[v197]=v198[v82[v84[1333 -(719 + 78 + 532) ]]];else v82[v84[2 + 0 ]][v82[v84[(535 -(43 + 490)) + 1 ]]]=v82[v84[9 -5 ]];end elseif (v85<=(1221 -(373 + 829))) then v82[v84[735 -(711 + 22) ]]=v62[v84[734 -(476 + 255) ]];elseif (((1559==1559) and (v85==(1150 -(369 + 761)))) or (4986<1574)) then v76=v84[2 + 1 ];elseif (v82[v84[2 -0 ]]==v84[7 -3 ]) then v76=v76 + (239 -(64 + 174)) ;else v76=v84[3];end elseif (v85<=(5 + 27)) then if (v85<=(38 -12)) then if (v85<=(359 -(144 + 192))) then if (v85==(238 -(42 + 174))) then v82[v84[2 + 0 ]][v84[3 + 0 ]]=v82[v84[2 + 2 ]];else v82[v84[1506 -(363 + 1141) ]][v84[1583 -(1183 + 397) ]]=v84[11 -7 ];end elseif ((v85<=24) or (1752<=788)) then local v146=v84[2 + 0 ];local v147=v82[v84[3 + 0 ]];v82[v146 + (1976 -(1913 + 62)) ]=v147;v82[v146]=v147[v84[3 + 1 ]];elseif ((v85>25) or (3907==177)) then local v205=v84[5 -3 ];local v206={};for v251=1, #v81 do local v252=v81[v251];for v263=0, #v252 do local v264=v252[v263];local v265=v264[1];local v266=v264[1935 -(565 + 1368) ];if ((v265==v82) and (v266>=v205)) then v206[v266]=v265[v266];v264[3 -2 ]=v206;end end end elseif v82[v84[1663 -(1477 + 184) ]] then v76=v76 + (1 -0) ;else v76=v84[(11 -8) + 0 ];end elseif ((4426>172) and (3470>555) and (v85<=(885 -(564 + 292)))) then if (v85<=(46 -19)) then local v151=v84[5 -3 ];local v152=v82[v84[3]];v82[v151 + (305 -(244 + 60)) ]=v152;v82[v151]=v152[v82[v84[4 + 0 ]]];elseif ((v85==(504 -(41 + 435))) or (972==645)) then v82[v84[1003 -(938 + 63) ]]=v82[v84[3]][v84[(863 -(240 + 619)) + 0 + 0 ]];else v82[v84[1127 -(936 + 189) ]]=v62[v84[1 + 2 ]];end elseif (v85<=(1643 -(1565 + 48))) then if v82[v84[2 + 0 ]] then v76=v76 + (1139 -((1243 -461) + 356)) ;else v76=v84[270 -(12 + 164 + (1835 -(1344 + 400))) ];end elseif ((3182>=2115) and (v85>(80 -49))) then v82[v84[2 -0 ]]={};else local v213=0;local v214;local v215;local v216;local v217;while true do if (v213==(1094 -(975 + 117))) then for v282=v214,v77 do local v283=1875 -(157 + 1718) ;while true do if ((586>455) and (v283==(0 + 0))) then v217=v217 + (3 -2) ;v82[v282]=v215[v217];break;end end end break;end if (v213==0) then v214=v84[6 -4 ];v215,v216=v75(v82[v214](v13(v82,v214 + (1019 -(697 + 321)) ,v84[7 -4 ])));v213=1;end if ((826==826) and (3893<4429) and (v213==(1 -0))) then v77=(v216 + v214) -(2 -1) ;v217=0;v213=1 + (406 -(255 + 150)) ;end end end elseif ((v85<=(70 -32)) or (4019>4441)) then if ((2017<4261) and ((v85<=35) or (2867<1905))) then if ((4716>80) and (v85<=33)) then local v156=v73[v84[7 -4 ]];local v157;local v158={};v157=v10({},{__index=function(v167,v168) local v169=1227 -(322 + 905) ;local v170;while true do if ((v169==(611 -(602 + 9))) or (1796>=4051)) then v170=v158[v168];return v170[1][v170[1191 -(449 + 740) ]];end end end,__newindex=function(v171,v172,v173) local v174=872 -(826 + 46) ;local v175;while true do if ((1619<=3756) and (v174==(947 -(245 + 702)))) then v175=v158[v172];v175[3 -2 ][v175[1 + 1 ]]=v173;break;end end end});for v176=1,v84[1902 -(260 + 1638) ] do local v177=0;local v178;while true do if (v177==(441 -(205 + 177 + 58))) then if (v178[1]==(112 -77)) then v158[v176-(1 + 0) ]={v82,v178[1208 -(902 + 303) ]};else v158[v176-((407 -(183 + 223)) -0) ]={v62,v178[1693 -(1121 + 569) ]};end v81[ #v81 + (215 -(22 + 192)) ]=v158;break;end if ((v177==(683 -(483 + 72 + 128))) or (3507==3272)) then v76=v76 + (1464 -(1404 + 59)) ;v178=v72[v76];v177=2 -1 ;end end end v82[v84[2]]=v29(v156,v157,v63);elseif (((604==604) and (v85>(44 -10))) or (876>=3075)) then v82[v84[767 -((805 -(10 + 327)) + 297) ]]=v82[v84[3]];else v82[v84[2]][v84[3]]=v84[566 -(334 + 228) ];end elseif ((4352>2554) and (v85<=(121 -(60 + 25)))) then v82[v84[4 -2 ]]();elseif (v85==(66 -29)) then local v222=v84[2];v82[v222](v13(v82,v222 + (339 -(118 + 220)) + 0 ,v84[239 -(141 + 95) ]));else local v223=0 + 0 ;local v224;while true do if (v223==(0 -0)) then v224=v84[4 -(1 + 1) ];v82[v224]=v82[v224](v13(v82,v224 + 1 + 0 ,v77));break;end end end elseif (v85<=((561 -(108 + 341)) -71)) then if (v85<=39) then v82[v84[2]]();elseif ((v85>40) or (4484==900)) then local v225=v84[2 + 0 ];local v226,v227=v75(v82[v225](v13(v82,v225 + 1 + 0 + 0 ,v84[(16 -12) -1 ])));v77=(v227 + v225) -(1 + 0) ;local v228=163 -(92 + 71) ;for v253=v225,v77 do v228=v228 + (1494 -(711 + 782)) ;v82[v253]=v226[v228];end else local v229=v84[1 + 1 ];v82[v229]=v82[v229](v13(v82,v229 + (1 -0) ,v84[768 -((1099 -525) + 191) ]));end elseif (v85<=(35 + 7)) then v82[v84[2]]=v82[v84[7 -4 ]][v84[3 + 1 ]];elseif (v85==(892 -(254 + (1064 -(270 + 199))))) then local v231=v84[128 -(55 + 71) ];v82[v231]=v82[v231](v13(v82,v231 + 1 ,v84[3 -0 ]));else do return;end end v76=v76 + ((581 + 1210) -(573 + 1217)) ;end end;end return v29(v28(),{},v17)(...);end return vv111(),...);
