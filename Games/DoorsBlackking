--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v6=string.rep;local v209=table.concat;local v228=table.insert;local v260=math.ldexp;local v111=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then local v88=0;while true do if (v88==0) then v19=v0(v3(v30,1,1));return "";end end else local v89=v2(v0(v30,16));if v19 then local v119=0;local v120;while true do if (v119==0) then v120=v6(v89,v19);v19=nil;v119=1;end if (v119==1) then return v120;end end else return v89;end end end);local function v20(v31,v32,v33) if v33 then local v90=0 -(0 + 0) ;local v91;while true do if (v90==(0 -(877 -(282 + 595)))) then v91=(v31/(2^(v32-(1 -0))))%((4 -2)^(((v33-(1638 -(1523 + 114))) -(v32-(620 -(555 + 64)))) + (932 -(857 + 74)))) ;return v91-(v91%(569 -(367 + 201))) ;end end else local v92=(929 -(214 + 713))^(v32-1) ;return (((v31%(v92 + v92))>=v92) and 1) or (0 + 0) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=0 + (117 -(32 + 85)) ;local v36;local v37;while true do if (v35==(1 -0)) then return (v37 * (1321 -(68 + 997))) + v36 ;end if (v35==((1245 + 25) -(226 + 1044))) then v36,v37=v1(v16,v18,v18 + 2 );v18=v18 + (8 -6) ;v35=1;end end end local function v23() local v38=0 + 0 ;local v39;local v40;local v41;local v42;while true do if (v38==(958 -(892 + 65))) then return (v42 * 16777216) + (v41 * (156337 -90801)) + (v40 * (472 -(159 + 57))) + v39 ;end if (v38==((0 -0) -0)) then v39,v40,v41,v42=v1(v16,v18,v18 + (353 -(87 + 263)) );v18=v18 + (184 -(67 + 113)) ;v38=1;end end end local function v24() local v43=0 + 0 ;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==(7 -5)) then v48=v20(v45,973 -(802 + 150) ,83 -52 );v49=((v20(v45,57 -25 )==(1 + 0)) and  -((1770 -(201 + 571)) -(915 + 82))) or (2 -1) ;v43=3;end if (v43==(0 + 0)) then v44=v23();v45=v23();v43=1 -(1138 -(116 + 1022)) ;end if (v43==(1190 -(1069 + (491 -373)))) then if (v48==(0 -0)) then if (v47==(0 -(0 + 0))) then return v49 * (0 + 0) ;else local v130=0 -0 ;while true do if (v130==(0 + 0)) then v48=1;v46=791 -(368 + 423) ;break;end end end elseif (v48==(6433 -4386)) then return ((v47==0) and (v49 * ((19 -(10 + 8))/(0 -0)))) or (v49 * NaN) ;end return v260(v49,v48-(1465 -((1518 -1102) + 26)) ) * (v46 + (v47/((6 -4)^(23 + 29)))) ;end if (v43==(1 -0)) then v46=439 -(145 + 293) ;v47=(v20(v45,431 -((156 -112) + 386) ,1506 -(998 + 488) ) * ((1 + 1)^((886 -(814 + 45)) + 5))) + v44 ;v43=2;end end end local function v25(v50) local v51;if  not v50 then v50=v23();if (v50==(0 -0)) then return "";end end v51=v3(v16,v18,(v18 + v50) -(1 + 0) );v18=v18 + v50 ;local v52={};for v69=1 + 0 , #v51 do v52[v69]=v2(v1(v3(v51,v69,v69)));end return v209(v52);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=(function() return function(v93,v94,v95,v96,v97,v98,v99,v100) local v93=(function() return 0;end)();local v94=(function() return;end)();local v95=(function() return;end)();while true do if (v93== #"!") then if (v94== #",") then v95=(function() return v96()~=0 ;end)();elseif (v94==2) then v95=(function() return v97();end)();elseif (v94== #"asd") then v95=(function() return v98();end)();end v99[v100]=(function() return v95;end)();break;end if (v93==0) then local v126=(function() return 0 -0 ;end)();local v127=(function() return;end)();while true do if (v126~=0) then else v127=(function() return 0 -0 ;end)();while true do if (v127==(374 -(123 + 251))) then v94=(function() return v96();end)();v95=(function() return nil;end)();v127=(function() return 1;end)();end if (1==v127) then v93=(function() return  #"}";end)();break;end end break;end end end end return v93,v94,v95,v96,v97,v98,v99,v100;end;end)();local v54=(function() return function(v101,v102,v103,v104,v105,v106,v107,v108,v109) local v110=(function() return 0 -0 ;end)();local v101=(function() return;end)();local v102=(function() return;end)();while true do local v118=(function() return 0;end)();while true do if ((698 -(208 + 490))==v118) then if (v110~=(1 + 0)) then else local v131=(function() return 0 + 0 ;end)();while true do if (v131==0) then local v133=(function() return 0;end)();while true do if (v133~=(836 -(660 + 176))) then else while true do if (v101~=(0 + 0)) then else v102=(function() return v103();end)();if (v104(v102, #"~", #".")==0) then local v260=(function() return 202 -(14 + 188) ;end)();local v261=(function() return;end)();local v262=(function() return;end)();local v263=(function() return;end)();while true do if (v260==0) then v261=(function() return v104(v102,2, #"asd");end)();v262=(function() return v104(v102, #".dev",681 -(534 + 141) );end)();v260=(function() return 1 + 0 ;end)();end if ((1 + 0)==v260) then local v310=(function() return 0;end)();while true do if (v310==(0 + 0)) then local v328=(function() return 0 -0 ;end)();while true do if (v328==0) then v263=(function() return {v105(),v105(),nil,nil};end)();if (v261==0) then local v338=(function() return 0;end)();local v339=(function() return;end)();while true do if (v338==0) then v339=(function() return 0;end)();while true do if (v339==(0 -0)) then v263[ #"91("]=(function() return v105();end)();v263[ #"?id="]=(function() return v105();end)();break;end end break;end end elseif (v261== #"[") then v263[ #"19("]=(function() return v106();end)();elseif (v261==(5 -3)) then v263[ #"xxx"]=(function() return v106() -(2^(9 + 7)) ;end)();elseif (v261== #"xnx") then local v344=(function() return 0 + 0 ;end)();local v345=(function() return;end)();while true do if (v344==(396 -(115 + 281))) then v345=(function() return 0;end)();while true do if ((0 -0)~=v345) then else v263[ #"-19"]=(function() return v106() -((2 + 0)^(38 -22)) ;end)();v263[ #"0836"]=(function() return v105();end)();break;end end break;end end end v328=(function() return 1;end)();end if (v328~=(3 -2)) then else v310=(function() return 1;end)();break;end end end if (v310~=(868 -(550 + 317))) then else v260=(function() return 2;end)();break;end end end if (v260~=(3 -0)) then else if (v104(v262, #"xxx", #"xnx")~= #"/") then else v263[ #"0836"]=(function() return v107[v263[ #"?id="]];end)();end v108[v109]=(function() return v263;end)();break;end if (v260~=2) then else if (v104(v262, #"{", #"}")== #",") then v263[2 -0 ]=(function() return v107[v263[5 -3 ]];end)();end if (v104(v262,287 -(134 + 151) ,2)== #"\\") then v263[ #"19("]=(function() return v107[v263[ #"19("]];end)();end v260=(function() return 1668 -(970 + 695) ;end)();end end end break;end end return v101,v102,v103,v104,v105,v106,v107,v108,v109;end end end end end if (v110~=(0 -0)) then else v101=(function() return 1990 -(582 + 1408) ;end)();v102=(function() return nil;end)();v110=(function() return 1;end)();end break;end end end end;end)();local v55=(function() return function(v111,v112,v113) local v114=(function() return 0 -0 ;end)();local v115=(function() return;end)();while true do if (v114~=(0 -0)) then else v115=(function() return 0;end)();while true do if (v115==(0 -0)) then v111[v112-#"!" ]=(function() return v113();end)();return v111,v112,v113;end end break;end end end;end)();local v56=(function() return {};end)();local v57=(function() return {};end)();local v58=(function() return {};end)();local v59=(function() return {v56,v57,nil,v58};end)();local v60=(function() return v23();end)();local v61=(function() return {};end)();for v71= #" ",v60 do FlatIdent_7126A,Type,Cons,v21,v24,v25,v61,v71=(function() return v53(FlatIdent_7126A,Type,Cons,v21,v24,v25,v61,v71);end)();end v59[ #"-19"]=(function() return v21();end)();for v72= #",",v23() do FlatIdent_494DF,Descriptor,v21,v20,v22,v23,v61,v56,v72=(function() return v54(FlatIdent_494DF,Descriptor,v21,v20,v22,v23,v61,v56,v72);end)();end for v73= #"\\",v23() do v57,v73,v28=(function() return v55(v57,v73,v28);end)();end return v59;end local function v29(v63,v64,v65) local v66=v63[(68 + 1757) -(1195 + (2284 -1655)) ];local v67=v63[2 -0 ];local v68=v63[244 -(187 + 54) ];return function(...) local v74=v66;local v75=v67;local v76=v68;local v77=v27;local v78=781 -(58 + 104 + 618) ;local v79= -(1 + 0 + 0);local v80={};local v81={...};local v82=v12("#",...) -(1 + 0) ;local v83={};local v84={};for v116=0 -0 ,v82 do if (v116>=v76) then v80[v116-v76 ]=v81[v116 + (1 -(0 -0)) ];else v84[v116]=v81[v116 + (940 -(391 + 323 + (413 -188))) ];end end local v85=(v82-v76) + 1 + 0 + 0 ;local v86;local v87;while true do local v117=1636 -(1373 + 263) ;while true do if (v117==((557 + 443) -(451 + 549))) then v86=v74[v78];v87=v86[1 + 0 + 0 ];v117=1 -(0 + 0) ;end if ((v117==(1 -0)) or (3723==3494)) then if ((v87<=(833 -(118 + 688))) or (4046==3026)) then if (v87<=(1397 -(746 + 638))) then if (v87<=(3 + 3)) then if (v87<=(2 -0)) then if (v87<=(341 -(218 + 123))) then local v134=v86[2];local v135,v136=v77(v84[v134](v13(v84,v134 + (1582 -(1535 + 46)) ,v86[3 + 0 ])));v79=(v136 + v134) -(1 + 0) ;local v137=0 + 0 ;for v144=v134,v79 do local v145=97 -(11 + 86) ;while true do if ((2008>638) and ((0 -0)==v145)) then v137=v137 + (561 -(306 + 254)) ;v84[v144]=v135[v137];break;end end end elseif ((1775<=3233) and (v87>(1 + (433 -(153 + 280))))) then for v238=v86[3 -1 ],v86[1470 -(899 + 568) ] do v84[v238]=nil;end else v84[v86[2 + (0 -0) ]]();end elseif (v87<=(9 -5)) then if ((v87==(606 -(268 + 335))) or (4543==1997)) then v65[v86[3]]=v84[v86[2]];else local v148=v86[292 -(60 + 230) ];local v149=v84[v86[1064 -(810 + 251) ]];v84[v148 + (573 -(426 + 146)) ]=v149;v84[v148]=v149[v86[1 + 3 ]];end elseif (v87>(1461 -(282 + 1174))) then v84[v86[813 -(569 + 242) ]]=v29(v75[v86[8 -5 ]],nil,v65);else v84[v86[1 + 1 ]]=v84[v86[736 -(711 + 22) ]];end elseif (v87<=((928 + 105) -(706 + 318))) then if ((v87<=(1258 -(721 + 530))) or (3102<728)) then do return;end elseif (v87>(1279 -(945 + 326))) then for v240=v86[4 -2 ],v86[3 + 0 ] do v84[v240]=nil;end else v84[v86[702 -(271 + 429) ]]=v84[v86[1 + 2 ]][v84[v86[1748 -(1344 + 400) ]]];end elseif (v87<=(11 + 0)) then if ((345==345) and (v87==(415 -(255 + 150)))) then v84[v86[1502 -(1408 + 92) ]]=v86[1089 -(461 + 625) ];elseif ((v84[v86[1290 -(993 + 295) ]]==v86[1 + 3 ]) or (2827<378)) then v78=v78 + (1172 -(418 + 753)) ;else v78=v86[2 + 1 ];end elseif (v87==(2 + 10)) then local v160=0 + 0 ;local v161;local v162;while true do if ((v160==(0 + 0)) or (3476<2597)) then v161=v86[531 -(406 + 123) ];v162=v84[v86[1772 -(691 + 1058 + 20) ]];v160=1 + 0 ;end if ((3079<4794) and (v160==((693 + 630) -(1249 + 73)))) then v84[v161 + ((409 + 41) -(108 + 341)) ]=v162;v84[v161]=v162[v84[v86[2 + 2 ]]];break;end end else local v163=1145 -(466 + 679) ;local v164;local v165;local v166;while true do if (v163==(2 -1)) then v166={};v165=v10({},{__index=function(v288,v289) local v290=0 -0 ;local v291;while true do if ((4854>4464) and (v290==(1900 -(106 + 1794)))) then v291=v166[v289];return v291[1 + 0 ][v291[1 + 1 ]];end end end,__newindex=function(v292,v293,v294) local v295=0 -0 ;local v296;while true do if (v295==(0 -0)) then v296=v166[v293];v296[115 -(4 + 110) ][v296[586 -(57 + 527) ]]=v294;break;end end end});v163=1429 -(41 + 1386) ;end if (v163==(105 -(17 + 86))) then for v297=1 + 0 ,v86[8 -4 ] do local v298=0 -0 ;local v299;while true do if ((v298==(166 -(122 + 44))) or (4912==3758)) then v78=v78 + (1 -0) ;v299=v74[v78];v298=3 -2 ;end if ((126<=3482) and (v298==(1 + 0))) then if (v299[1 + 0 + 0 ]==5) then v166[v297-(1 -0) ]={v84,v299[1260 -(1043 + 214) ]};else v166[v297-((5 -2) -2) ]={v64,v299[583 -(361 + 219) ]};end v83[ #v83 + (321 -(53 + 267)) ]=v166;break;end end end v84[v86[1 + 1 ]]=v29(v164,v165,v65);break;end if ((413 -(15 + 398))==v163) then v164=v75[v86[985 -(18 + 579 + 385) ]];v165=nil;v163=1;end end end elseif (v87<=(75 -55)) then if ((v87<=(10 + 6)) or (2374==4374)) then if ((1575==1575) and (v87<=(2 + 12))) then if (v86[6 -4 ]==v84[v86[90 -(84 + 2) ]]) then v78=v78 + 1 + 0 ;else v78=v86[853 -(20 + 830) ];end elseif (v87>(14 + 1)) then local v168=0 + 0 ;local v169;local v170;while true do if (v168==(127 -(116 + 10))) then for v300=v169 + (1 -0) ,v86[1 + 3 ] do v170=v170   .. v84[v300] ;end v84[v86[(4 -1) -1 ]]=v170;break;end if ((738 -(542 + 196))==v168) then v169=v86[(5 + 1) -3 ];v170=v84[v169];v168=1 + 0 ;end end elseif  not v84[v86[2 + (842 -(497 + 345)) ]] then v78=v78 + 1 + 0 ;else v78=v86[2 + 1 ];end elseif (v87<=(70 -52)) then if ((v87>(44 -27)) or (2234==1455)) then do return;end else v84[v86[(1 + 3) -2 ]]();end elseif (v87>(1570 -(191 + 935 + 425))) then v84[v86[2]]=v64[v86[408 -(118 + 287) ]];else local v173=v86[11 -8 ];local v174=v84[v173];for v242=v173 + (1122 -(118 + 1003)) ,v86[11 -7 ] do v174=v174   .. v84[v242] ;end v84[v86[379 -((1475 -(605 + 728)) + 235) ]]=v174;end elseif (v87<=(104 -81)) then if (v87<=(5 + 16)) then v84[v86[979 -(553 + 424) ]]=v84[v86[1 + 2 ]][v84[v86[4 + 0 ]]];elseif ((v87>((30 + 11) -19)) or (1067>1779)) then v84[v86[2]]=v86[3 + 0 ];else local v178=v86[1996 -(109 + 1885) ];v84[v178]=v84[v178](v13(v84,v178 + (1 -0) + 0 ,v86[2 + 1 ]));end elseif ((2161>=934) and (v87<=(11 + 14))) then if ((1612==1612) and (v87>(850 -(802 + 24)))) then v84[v86[2]][v86[2 + 1 ]]=v84[v86[(1 + 7) -4 ]];else local v182=v86[(3 -2) + 1 ];local v183,v184=v77(v84[v182](v13(v84,v182 + 1 ,v86[3 + 0 ])));v79=(v184 + v182) -(2 -1) ;local v185=0;for v243=v182,v79 do local v244=0 -(0 + 0) ;while true do if (v244==(0 -0)) then v185=v185 + 1 + 0 + 0 ;v84[v243]=v183[v185];break;end end end end elseif (v87>(125 -99)) then v84[v86[755 -(239 + 514) ]]={};else v84[v86[1 + 1 ]]=v84[v86[1332 -(797 + 532) ]][v86[(492 -(457 + 32)) + 1 ]];end elseif (v87<=(14 + 27)) then if ((4352>=2833) and (v87<=(79 -45))) then if ((v87<=(15 + 15)) or (3222<3073)) then if ((744<=2942) and (v87<=(1230 -(373 + 829)))) then v84[v86[733 -(476 + 255) ]]=v64[v86[1622 -(1427 + 192) ]];elseif (v87==((492 + 667) -(369 + 761))) then local v189=v86[2 + 0 ];local v190=v84[v86[5 -2 ]];v84[v189 + (1403 -(832 + 570)) ]=v190;v84[v189]=v190[v86[7 -3 ]];else local v194=238 -(64 + 174) ;local v195;local v196;while true do if ((0 + 0 + 0)==v194) then v195=v86[328 -(192 + 134) ];v196={};v194=1 -0 ;end if (v194==(337 -(144 + 192))) then for v303=217 -(42 + 174) , #v83 do local v304=0 + 0 ;local v305;while true do if ((0 + 0)==v304) then v305=v83[v303];for v329=0 + 0 , #v305 do local v330=v305[v329];local v331=v330[1];local v332=v330[1506 -(363 + 1141) ];if ((v331==v84) and (v332>=v195)) then v196[v332]=v331[v332];v330[1581 -(1183 + 397) ]=v196;end end break;end end end break;end end end elseif (v87<=32) then if ((v87==(94 -63)) or (1833<=1322)) then v65[v86[1809 -(1202 + 604) ]]=v84[v86[2]];else v84[v86[2]][v84[v86[3 + 0 ]]]=v84[v86[6 -2 ]];end elseif ((v87>(25 + 8)) or (3467<=1055)) then local v201=v75[v86[1978 -(1913 + 62) ]];local v202;local v203={};v202=v10({},{__index=function(v245,v246) local v247=0 + 0 ;local v248;while true do if (0==v247) then v248=v203[v246];return v248[1 + 0 ][v248[2 + 0 ]];end end end,__newindex=function(v249,v250,v251) local v252=0 -0 ;local v253;while true do if (v252==(1933 -(565 + 1368))) then v253=v203[v250];v253[3 -2 ][v253[3 -1 ]]=v251;break;end end end});for v254=1912 -(340 + 1571) ,v86[1665 -(1477 + 184) ] do v78=v78 + (1773 -(1733 + 11 + 28)) ;local v255=v74[v78];if (v255[2 -1 ]==(6 -1)) then v203[v254-(1949 -(1096 + 852)) ]={v84,v255[4 -1 ]};else v203[v254-(2 -1) ]={v64,v255[3 + 0 ]};end v83[ #v83 + (96 -(51 + 44)) ]=v203;end v84[v86[478 -(41 + 435) ]]=v29(v201,v202,v65);elseif (v86[1 + 1 ]==v84[v86[1005 -(938 + 31 + 32) ]]) then v78=v78 + 1 + 0 ;else v78=v86[1128 -(936 + (985 -(588 + 208))) ];end elseif (v87<=37) then if (v87<=(12 + 23)) then if ((3541==3541) and  not v84[v86[2 + 0 ]]) then v78=v78 + (664 -(174 + 489)) ;else v78=v86[1616 -(1565 + 48) ];end elseif (v87>(93 -57)) then v78=v86[1908 -(830 + 1075) ];else local v207=v86[2 + 0 ];local v208=v84[v86[1141 -((2107 -1325) + 356) ]];v84[v207 + (268 -(176 + 91)) ]=v208;v84[v207]=v208[v84[v86[10 -6 ]]];end elseif (v87<=(56 -17)) then if (v87>(156 -118)) then local v212=v86[1094 -((2775 -(884 + 916)) + 117) ];local v213={};for v257=(3927 -2051) -(157 + 997 + 721) , #v83 do local v258=0 + 0 ;local v259;while true do if ((v258==(0 -0)) or (3557>=4003)) then v259=v83[v257];for v312=(653 -(232 + 421)) -0 , #v259 do local v313=v259[v312];local v314=v313[1019 -(697 + 321) ];local v315=v313[(1891 -(1569 + 320)) -0 ];if ((v314==v84) and (v315>=v212)) then v213[v315]=v314[v315];v313[3 -2 ]=v213;end end break;end end end elseif (v84[v86[(307 + 943) -(111 + 1137) ]]==v86[10 -6 ]) then v78=v78 + 1 ;else v78=v86[5 -2 ];end elseif (v87>(92 -52)) then v84[v86[1 + 1 + 0 ]][v84[v86[(1772 -1246) -(423 + 100) ]]]=v84[v86[6 -(607 -(316 + 289)) ]];else v84[v86[5 -3 ]][v86[1230 -(322 + 905) ]]=v86[4];end elseif ((v87<=(659 -((1575 -973) + 9))) or (657>=1668)) then if (v87<=(1233 -(449 + 740))) then if (v87<=(914 -(826 + 46))) then local v142=v86[949 -(245 + 702) ];v84[v142]=v84[v142](v13(v84,v142 + (3 -2) ,v79));elseif ((v87>(1 + 13 + 29)) or (1027>3858)) then v84[v86[1900 -(260 + 1638) ]][v86[3]]=v84[v86[444 -(382 + 58) ]];else local v220=v86[(1459 -(666 + 787)) -(429 -(360 + 65)) ];v84[v220](v13(v84,v220 + (1 -0) ,v86[3 + 0 ]));end elseif (v87<=((88 + 6) -48)) then if (v87>((266 -(79 + 175)) + (51 -18))) then v84[v86[2]]=v29(v75[v86[3]],nil,v65);elseif v84[v86[(3 + 0) -1 ]] then v78=v78 + (2 -1) ;else v78=v86[1208 -(902 + 303) ];end elseif ((v87==(103 -56)) or (3654<450)) then v84[v86[(12 -8) -2 ]]=v65[v86[1 + 2 ]];else local v224=1690 -(1121 + (1095 -526)) ;local v225;while true do if ((1891<4453) and ((214 -(22 + 192))==v224)) then v225=v86[8 -6 ];v84[v225]=v84[v225](v13(v84,v225 + (2 -1) ,v86[686 -(483 + 200) ]));break;end end end elseif ((v87<=(1515 -(1404 + 59))) or (3140<2129)) then if ((v87<=(136 -(985 -(503 + 396)))) or (2555<1240)) then if ((v87>(65 -16)) or (4727<=4722)) then v78=v86[768 -(468 + 297) ];else local v227=v86[(745 -(92 + 89)) -(334 + (441 -213)) ];v84[v227]=v84[v227](v13(v84,v227 + (3 -2) ,v79));end elseif ((740<4937) and (v87==(117 -66))) then v84[v86[2 -0 ]]=v84[v86[1 + 2 ]][v86[12 -8 ]];else local v231=236 -(141 + 95) ;local v232;while true do if ((0 + 0 + 0)==v231) then v232=v86[4 -2 ];v84[v232](v13(v84,v232 + (2 -1) ,v86[1 + 2 ]));break;end end end elseif (v87<=(147 -93)) then if (v87>(38 + 15)) then if ((3658>=280) and v84[v86[2 + 0 ]]) then v78=v78 + (1 -0) ;else v78=v86[2 + 1 ];end else v84[v86[165 -(92 + 71) ]]=v65[v86[2 + 0 + 1 ]];end elseif (v87==(92 -37)) then v84[v86[767 -(574 + 191) ]][v86[457 -(13 + 441) ]]=v86[4 + 0 ];else v84[v86[5 -3 ]]={};end v78=v78 + (2 -1) ;break;end end end end;end return v29(v28(),{},v17)(...);end return vv111(),...);
