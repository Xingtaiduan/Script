local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v6=string.rep;local v179=table.concat;local v126=table.insert;local v259=math.ldexp;local v111=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then local v84=0;while true do if (v84==0) then v19=v0(v3(v30,1,1));return "";end end else local v85=v2(v0(v30,16));if v19 then local v114=0;local v115;while true do if (v114==1) then return v115;end if (v114==0) then v115=v6(v85,v19);v19=nil;v114=1;end end else return v85;end end end);local function v20(v31,v32,v33) if v33 then local v86=(v31/((5 -3)^(v32-1)))%((5 -3)^(((v33-(1 -0)) -(v32-(2 -1))) + (620 -(555 + (91 -27))))) ;return v86-(v86%(932 -(857 + 74))) ;else local v87=568 -((1432 -(68 + 997)) + 201) ;local v88;while true do if (v87==(927 -(214 + 713))) then v88=(1 + 1)^(v32-(1 + 0)) ;return (((v31%(v88 + v88))>=v88) and (878 -(254 + 28 + 595))) or (1637 -(1523 + 114)) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (1272 -(226 + 1044)) );v18=v18 + (8 -6) ;return (v36 * (373 -(32 + 85))) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + 3 + 0 );v18=v18 + 1 + 3 ;return (v40 * (16778173 -(892 + 65))) + (v39 * (156337 -90801)) + (v38 * ((865 -393) -216)) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=(1102 -751) -(87 + 263) ;local v44=(v20(v42,181 -(67 + 113) ,15 + 5 ) * ((444 -(416 + 26))^(78 -46))) + v41 ;local v45=v20(v42,16 + 5 ,123 -92 );local v46=((v20(v42,984 -(802 + 150) )==(2 -1)) and  -(1 -0)) or (1 + 0) ;if (v45==(997 -(915 + 82))) then if (v44==(0 -0)) then return v46 * (0 + 0) ;else local v116=0 -0 ;while true do if (v116==0) then v45=1188 -((3412 -2343) + (136 -(10 + 8))) ;v43=0 -0 ;break;end end end elseif (v45==(7874 -5827)) then return ((v44==(0 -0)) and (v46 * ((1 + 0)/(0 -0)))) or (v46 * NaN) ;end return v259(v46,v45-1023 ) * (v43 + (v44/((2 + 0)^(843 -(368 + 423))))) ;end local function v25(v47) local v48=1138 -((1001 -(261 + 624)) + 1022) ;local v49;local v50;while true do if (v48==(0 -0)) then v49=nil;if  not v47 then v47=v23();if (v47==(0 + 0)) then return "";end end v48=(1 -0) -0 ;end if (v48==(441 -(145 + 293))) then return v179(v50);end if (v48==(432 -(44 + 386))) then v50={};for v117=1487 -(998 + 488) , #v49 do v50[v117]=v2(v1(v3(v49,v117,v117)));end v48=1 + 2 ;end if (v48==((1081 -(1020 + 60)) + 0)) then v49=v3(v16,v18,(v18 + v47) -(773 -(201 + 571)) );v18=v18 + v47 ;v48=1 + 1 ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return function(v89,v90,v91,v92,v93,v94,v95,v96) local v89=(function() return 0;end)();local v90=(function() return;end)();local v92=(function() return;end)();while true do if (v89==0) then local v123=(function() return 0 -0 ;end)();local v124=(function() return;end)();while true do if ((120 -(30 + 90))==v123) then v124=(function() return 0;end)();while true do if (v124==(1 + 0)) then v89=(function() return  #"~";end)();break;end if (v124==0) then v90=(function() return v91();end)();v92=(function() return nil;end)();v124=(function() return 1 + 0 ;end)();end end break;end end end if (v89== #"[") then if (v90== #",") then v92=(function() return v91()~=0 ;end)();elseif (v90==2) then v92=(function() return v93();end)();elseif (v90== #"91(") then v92=(function() return v94();end)();end v95[v96]=(function() return v92;end)();break;end end return v89,v90,v91,v92,v93,v94,v95,v96;end;end)();local v52=(function() return function(v97,v98,v99,v100,v101,v102,v103,v104,v105) local v106=(function() return 0;end)();local v97=(function() return;end)();local v98=(function() return;end)();while true do if (v106==0) then local v126=(function() return 0;end)();while true do if ((1 + 0)==v126) then v106=(function() return 1;end)();break;end if (v126~=(0 + 0)) then else v97=(function() return 0;end)();v98=(function() return nil;end)();v126=(function() return 1;end)();end end end if (v106==1) then while true do if (v97==0) then v98=(function() return v99();end)();if (v100(v98, #"{", #"<")==0) then local v131=(function() return 0;end)();local v132=(function() return;end)();local v133=(function() return;end)();local v134=(function() return;end)();while true do if ((6 -3)~=v131) then else if (v100(v133, #"-19", #"xxx")== #"\\") then v134[ #"0313"]=(function() return v103[v134[ #"asd1"]];end)();end v104[v105]=(function() return v134;end)();break;end if (v131~=(2 -0)) then else if (v100(v133, #",", #"!")~= #"|") then else v134[5 -3 ]=(function() return v103[v134[2]];end)();end if (v100(v133,2 + 0 ,2 + 0 )~= #"|") then else v134[ #"gha"]=(function() return v103[v134[ #"xxx"]];end)();end v131=(function() return 399 -(115 + 281) ;end)();end if (v131==1) then local v136=(function() return 0;end)();local v137=(function() return;end)();while true do if (v136==(0 -0)) then v137=(function() return 0;end)();while true do if (v137~=(0 + 0)) then else v134=(function() return {v101(),v101(),nil,nil};end)();if (v132==(0 -0)) then local v294=(function() return 867 -(550 + 317) ;end)();local v295=(function() return;end)();while true do if ((0 -0)==v294) then v295=(function() return 0;end)();while true do if (v295==0) then v134[ #"xxx"]=(function() return v101();end)();v134[ #"xnxx"]=(function() return v101();end)();break;end end break;end end elseif (v132== #"{") then v134[ #"19("]=(function() return v102();end)();elseif (v132==2) then v134[ #"xxx"]=(function() return v102() -((2 -0)^16) ;end)();elseif (v132== #"xnx") then local v319=(function() return 0;end)();local v320=(function() return;end)();while true do if (v319~=(0 -0)) then else v320=(function() return 285 -(134 + 151) ;end)();while true do if (v320~=0) then else v134[ #"nil"]=(function() return v102() -((1667 -(970 + 695))^16) ;end)();v134[ #"0836"]=(function() return v101();end)();break;end end break;end end end v137=(function() return 1;end)();end if (v137==(1 -0)) then v131=(function() return 2;end)();break;end end break;end end end if (v131==0) then local v138=(function() return 1990 -(582 + 1408) ;end)();while true do if (v138~=0) then else v132=(function() return v100(v98,2, #"xnx");end)();v133=(function() return v100(v98, #"0313",6);end)();v138=(function() return 3 -2 ;end)();end if (v138~=1) then else v131=(function() return 1;end)();break;end end end end end break;end end return v97,v98,v99,v100,v101,v102,v103,v104,v105;end end end;end)();local v53=(function() return function(v107,v108,v109) local v110=(function() return 0;end)();local v111=(function() return;end)();while true do if (v110~=0) then else v111=(function() return 0 -0 ;end)();while true do if (v111==(0 -0)) then local v129=(function() return 1824 -(1195 + 629) ;end)();local v130=(function() return;end)();while true do if (v129==0) then v130=(function() return 0 -0 ;end)();while true do if (v130==0) then v107[v108-#"<" ]=(function() return v109();end)();return v107,v108,v109;end end break;end end end end break;end end end;end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {v54,v55,nil,v56};end)();local v58=(function() return v23();end)();local v59=(function() return {};end)();for v67= #"/",v58 do FlatIdent_25011,Type,v21,Cons,v24,v25,v59,v67=(function() return v51(FlatIdent_25011,Type,v21,Cons,v24,v25,v59,v67);end)();end v57[ #"91("]=(function() return v21();end)();for v68= #"<",v23() do FlatIdent_1076E,Descriptor,v21,v20,v22,v23,v59,v54,v68=(function() return v52(FlatIdent_1076E,Descriptor,v21,v20,v22,v23,v59,v54,v68);end)();end for v69= #"|",v23() do v55,v69,v28=(function() return v53(v55,v69,v28);end)();end return v57;end local function v29(v61,v62,v63) local v64=v61[1];local v65=v61[243 -((455 -268) + 54) ];local v66=v61[783 -(162 + (832 -(22 + 192))) ];return function(...) local v70=v64;local v71=v65;local v72=v66;local v73=v27;local v74=1 + (683 -(483 + 200)) ;local v75= -1;local v76={};local v77={...};local v78=v12("#",...) -1 ;local v79={};local v80={};for v112=0,v78 do if ((1159<=1788) and (v112>=v72)) then v76[v112-v72 ]=v77[v112 + 1 ];else v80[v112]=v77[v112 + (1 -0) ];end end local v81=(v78-v72) + 1 ;local v82;local v83;while true do local v113=0 -0 ;while true do if (((1 + (0 -0))==v113) or (3507>4318)) then if (v83<=((2226 -569) -(1373 + 263))) then if (v83<=(1010 -(451 + (834 -(175 + 110))))) then if (v83<=(2 + 2)) then if (v83<=(1 -0)) then if (v83>0) then v80[v82[2 -(0 -0) ]]=v80[v82[3]][v80[v82[1388 -(746 + 638) ]]];else v80[v82[2]]();end elseif (v83<=(1 + 1)) then v80[v82[2]]=v63[v82[(769 -(468 + 297)) -1 ]];elseif ((v83==(344 -(218 + 123))) or (3075<=2965)) then local v204=1581 -(1535 + 46) ;local v205;local v206;local v207;local v208;while true do if ((1365<=2011) and (4429>=3120) and (v204==((562 -(334 + 228)) + (0 -0)))) then v205=v82[2];v206,v207=v73(v80[v205](v13(v80,v205 + 1 + 0 ,v82[(2359 -(503 + 1293)) -(306 + 254) ])));v204=1 + 0 ;end if ((969<=1905) and (v204==(1 -0))) then v75=(v207 + v205) -(1468 -((2510 -1611) + 568)) ;v208=0 + 0 ;v204=2 + 0 ;end if (v204==(4 -2)) then for v296=v205,v75 do v208=v208 + (604 -(268 + 335)) ;v80[v296]=v206[v208];end break;end end else v80[v82[292 -(60 + (1291 -(810 + 251))) ]]={};end elseif (v83<=(579 -(426 + 146))) then if (v83<=(4 + 1)) then if (v80[v82[1 + 1 ]]==v82[1460 -(282 + 1174) ]) then v74=v74 + (812 -(569 + 242)) ;else v74=v82[8 -5 ];end elseif (v83>(1 + 5)) then local v211=1024 -(706 + (736 -418)) ;local v212;while true do if ((v211==(1251 -((1307 -586) + 530))) or (2776>3575)) then v212=v82[(362 + 911) -(945 + 326) ];v80[v212]=v80[v212](v13(v80,v212 + (2 -(1 + 0)) ,v82[3 + 0 ]));break;end end else local v213=v82[(633 + 69) -(271 + 429) ];v80[v213](v13(v80,v213 + 1 + 0 ,v82[(2036 -(43 + 490)) -(1408 + (328 -(141 + 95))) ]));end elseif (v83<=(8 + 0)) then v80[v82[1088 -(461 + 625) ]][v80[v82[3]]]=v80[v82[4]];elseif (v83==((2030 -(711 + 22)) -(993 + 295))) then if v80[v82[(2 -1) + 1 ]] then v74=v74 + ((4533 -3361) -((1004 -586) + 753)) ;else v74=v82[3];end elseif (v80[v82[1 + 1 ]]==v82[1 + 3 ]) then v74=v74 + 1 + 0 ;else v74=v82[3];end elseif ((v83<=(874 -(240 + 619))) or (2554==4804)) then if (v83<=(1 + 3 + 8)) then if (v83>(540 -(406 + 123))) then v80[v82[1771 -(1749 + 20) ]]=v80[v82[1 + 2 ]][v82[1326 -(1249 + 73) ]];else local v151=(0 -0) + 0 ;local v152;local v153;while true do if ((2577==2577) and (v151==(1146 -(328 + 138 + 679)))) then v80[v152 + 1 ]=v153;v80[v152]=v153[v82[9 -5 ]];break;end if ((v151==(0 -0)) or (3332==1473)) then v152=v82[(459 + 1443) -(106 + 1794) ];v153=v80[v82[1 + 2 ]];v151=1 + 0 ;end end end elseif ((v83<=(38 -25)) or (4051<=1157)) then local v154=(0 -0) -0 ;local v155;local v156;while true do if (v154==(114 -(4 + 110))) then v155=v82[(39 + 547) -(57 + 527) ];v156={};v154=1;end if (v154==1) then for v271=1428 -(41 + 1386) , #v79 do local v272=0;local v273;while true do if (v272==(103 -(17 + 86))) then v273=v79[v271];for v306=0, #v273 do local v307=v273[v306];local v308=v307[1745 -(1344 + 400) ];local v309=v307[2 + 0 ];if ((v308==v80) and (v309>=v155)) then v156[v309]=v308[v309];v307[1 -0 ]=v156;end end break;end end end break;end end elseif (((604<2881) and (v83==(40 -26))) or (6>=1889)) then local v214=v82[(573 -(255 + 150)) -(97 + 25 + 23 + 21) ];v80[v214](v13(v80,v214 + ((1 + 0) -0) ,v82[9 -6 ]));else v80[v82[2 + 0 ]]=v80[v82[3]][v80[v82[16 -12 ]]];end elseif ((v83<=(3 + 15)) or (900==3377)) then if ((4459>591) and (v83<=16)) then local v157=v71[v82[5 -2 ]];local v158;local v159={};v158=v10({},{__index=function(v180,v181) local v182=v159[v181];return v182[66 -(30 + 35) ][v182[2 + 0 ]];end,__newindex=function(v183,v184,v185) local v186=v159[v184];v186[1258 -(1043 + 214) ][v186[7 -5 ]]=v185;end});for v188=1213 -(323 + 889) ,v82[4] do v74=v74 + ((2 + 0) -1) ;local v189=v70[v74];if (v189[581 -((524 -(92 + 71)) + (1958 -(404 + 1335))) ]==(344 -(53 + (673 -(183 + 223))))) then v159[v188-(1 + (0 -0)) ]={v80,v189[3]};else v159[v188-(3 -2) ]={v62,v189[2 + 1 ]};end v79[ #v79 + (851 -(20 + 830)) ]=v159;end v80[v82[2 + 0 ]]=v29(v157,v158,v63);elseif ((506<=1892) and (3398>=2395) and (v83==((71 + 72) -(116 + 10)))) then v74=v82[1 + 2 ];else local v218=v82[740 -(542 + (329 -133)) ];local v219=v80[v82[6 -(2 + 1) ]];v80[v218 + (338 -(10 + 327)) + 0 ]=v219;v80[v218]=v219[v80[v82[3 + 1 ]]];end elseif (v83<=(7 + 12)) then do return;end elseif (v83==20) then local v223=v82[4 -2 ];local v224=v80[v82[3]];v80[v223 + (2 -1) ]=v224;v80[v223]=v224[v80[v82[(1083 + 472) -((1464 -(118 + 220)) + 425) ]]];else v80[v82[407 -(118 + (1052 -(574 + 191))) ]]=v82[11 -(3 + 5) ];end elseif ((v83<=(1153 -(118 + 1003))) or (2183>=2824) or (2008>2218)) then if ((1936==1936) and (v83<=(76 -50))) then if ((v83<=(400 -(142 + 235))) or (4832<4313)) then if ((4088>3874) and (v83>(99 -77))) then v80[v82[1 + 1 ]][v82[980 -(553 + 424) ]]=v80[v82[7 -(452 -(108 + 341)) ]];else v80[v82[2 + 0 + 0 ]][v82[2 + 1 + 0 ]]=v82[3 + 1 ];end elseif (v83<=(11 + (54 -41))) then v80[v82[2 + 0 ]]=v80[v82[6 -3 ]];elseif ((4332==4332) and (v83>(69 -44))) then local v230=0 -0 ;local v231;while true do if ((379<=4147) and (0==v230)) then v231=v82[1 + 1 ];v80[v231]=v80[v231](v13(v80,v231 + ((1497 -(711 + 782)) -(7 -4)) ,v82[756 -(239 + 514) ]));break;end end else v80[v82[1 + 1 ]]=v62[v82[1332 -(797 + 532) ]];end elseif (v83<=29) then if (v83<=(20 + 7)) then v80[v82[1 + 1 ]][v80[v82[3]]]=v80[v82[9 -5 ]];elseif (v83==28) then if ((3999>=2900) and v80[v82[2]]) then v74=v74 + 1 ;else v74=v82[1205 -(373 + (1588 -759)) ];end else v80[v82[733 -(476 + 255) ]]();end elseif (v83<=30) then v80[v82[1132 -(369 + 761) ]]=v62[v82[2 + 1 ]];elseif (v83==(55 -24)) then v80[v82[3 -1 ]]=v82[3];else local v236=v82[(123 + 117) -(64 + 174) ];v80[v236]=v80[v236](v13(v80,v236 + 1 + (849 -(254 + 595)) ,v75));end elseif ((v83<=(13 + 25)) or (4514<=1009)) then if ((v83<=(161 -(55 + 71))) or (2525>4064)) then if (v83<=(48 -15)) then v80[v82[2]]={};elseif (v83>(370 -(144 + 192))) then v74=v82[219 -(42 + 174) ];else do return;end end elseif ((4371==4371) and (v83<=(28 + 8))) then local v172=v71[v82[(8 -5) + 0 ]];local v173;local v174={};v173=v10({},{__index=function(v191,v192) local v193=v174[v192];return v193[1 + 0 ][v193[1506 -(363 + 1141) ]];end,__newindex=function(v194,v195,v196) local v197=1580 -(1183 + 397) ;local v198;while true do if (0==v197) then v198=v174[v195];v198[2 -1 ][v198[1 + 1 ]]=v196;break;end end end});for v199=(1 -0) + 0 ,v82[4] do local v200=(0 -0) + (1790 -(573 + 1217)) ;local v201;while true do if (v200==(1975 -(1913 + 62))) then v74=v74 + (2 -1) + 0 ;v201=v70[v74];v200=2 -(1 + 0) ;end if (v200==((3115 -1181) -((1732 -(645 + 522)) + 1368))) then if (v201[(942 -(714 + 225)) -2 ]==((3475 -(1010 + 780)) -(1477 + 184))) then v174[v199-(2 -1) ]={v80,v201[859 -(564 + 292) ]};else v174[v199-(1 -0) ]={v62,v201[3 + 0 ]};end v79[ #v79 + ((690 -213) -(41 + (1241 -(118 + 688)))) ]=v174;break;end end end v80[v82[1003 -(938 + (111 -(25 + 23))) ]]=v29(v172,v173,v63);elseif (v83==37) then v80[v82[2 + 0 ]]=v63[v82[3]];else v80[v82[2]][v82[1128 -(936 + 189) ]]=v80[v82[4]];end elseif ((v83<=((1850 -(1045 + 791)) + 27)) or (266>4986)) then if ((v83<=(1652 -(1565 + 48))) or (3496==1192)) then local v176=v82[2];local v177={};for v202=1 + 0 , #v79 do local v203=v79[v202];for v243=(2880 -1742) -(782 + 356) , #v203 do local v244=267 -(176 + 91) ;local v245;local v246;local v247;while true do if (v244==0) then v245=v203[v243];v246=v245[2 -1 ];v244=1;end if (v244==(1 -0)) then v247=v245[1094 -(975 + 117) ];if ((1991>=925) and (v246==v80) and (v247>=v176)) then local v304=1875 -(157 + 1718) ;while true do if (v304==(0 + 0)) then v177[v247]=v246[v247];v245[(4 -1) -2 ]=v177;break;end end end break;end end end end elseif (v83>40) then local v248=0 -0 ;local v249;local v250;while true do if ((0==v248) or (208==2959)) then v249=v82[1020 -(697 + 321) ];v250=v80[v82[7 -4 ]];v248=1 -0 ;end if ((455<2053) and ((506 -(351 + 154))==v248)) then v80[v249 + (2 -1) ]=v250;v80[v249]=v250[v82[2 + 2 ]];break;end end else local v251=v82[3 -1 ];local v252,v253=v73(v80[v251](v13(v80,v251 + (2 -1) ,v82[(239 + 991) -((2208 -(927 + 959)) + (2479 -(1281 + 293))) ])));v75=(v253 + v251) -(612 -(602 + 9)) ;local v254=1189 -(449 + 740) ;for v267=v251,v75 do local v268=872 -(826 + (154 -108)) ;while true do if ((v268==(947 -(245 + (1434 -(16 + 716))))) or (826==4851)) then v254=v254 + 1 ;v80[v267]=v252[v254];break;end end end end elseif (v83<=(132 -90)) then v80[v82[1 + 1 ]]=v80[v82[1901 -(260 + 1638) ]][v82[444 -(382 + 58) ]];elseif (v83>43) then local v255=0;local v256;while true do if ((183==183) and ((0 -(0 -0))==v255)) then v256=v82[2 + 0 ];v80[v256]=v80[v256](v13(v80,v256 + (1 -0) ,v75));break;end end else v80[v82[268 -(28 + 238) ]][v82[8 -(10 -5) ]]=v82[(1306 -(11 + 86)) -(902 + 303) ];end v74=v74 + (1 -0) ;break;end if (v113==(0 -0)) then v82=v70[v74];v83=v82[1 + 0 ];v113=1691 -(1121 + 569) ;end end end end;end return v29(v28(),{},v17)(...);end return vv111(),...);
